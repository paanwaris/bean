% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibrate_bean.R
\name{calibrate_bean}
\alias{calibrate_bean}
\title{Calibrate thinning and niche parameters using model performance}
\usage{
calibrate_bean(
  data,
  env_vars,
  background_data,
  env_rasters,
  longitude,
  latitude,
  quantile_range = seq(0.1, 0.9, 0.1),
  method_range = c("covmat", "mve"),
  target_percent = 0.95,
  level = 0.95,
  thinning_reps = 10,
  k = 4,
  n_repeats = 10,
  maxent_args = c("linear=true", "quadratic=false", "product=false", "threshold=false",
    "hinge=false", "doclamp=true")
)
}
\arguments{
\item{data}{A data.frame containing species occurrences and pre-scaled
environmental variables, typically the output of \code{\link{prepare_bean}}.}

\item{env_vars}{A character vector specifying the column names in data that
represent the environmental variables.}

\item{background_data}{A data.frame with longitude and latitude of background points.}

\item{env_rasters}{A RasterStack or SpatRaster object of environmental variables.}

\item{longitude}{(character) The name of the longitude column in the data frames.}

\item{latitude}{(character) The name of the latitude column in the data frames.}

\item{quantile_range}{A numeric vector of quantile values to test for resolution finding.}

\item{method_range}{A character vector of ellipsoid methods to test (e.g., "c("covmat", "mve")").}

\item{target_percent}{(numeric) The target proportion of points to retain after density thinning.}

\item{level}{(numeric) A single value between 0 and 1 representing the
proportion of data points the ellipse is intended to encompass.
Default is 0.95.}

\item{thinning_reps}{(numeric) The number of times to repeat the stochastic
thinning process for each parameter combination to get a stable performance estimate.}

\item{k}{(numeric) The number of folds for cross-validation. Default = 4.}

\item{n_repeats}{(numeric) The number of times to repeat the k-fold process. Default = 10.}

\item{maxent_args}{(character) A vector of arguments for \code{dismo::maxent}.}
}
\value{
An object of class \code{bean_calibration}, which is a list containing:
  \item{best_parameters}{A list with the optimal "quantile", "method", "resolution", and "cap".}
  \item{calibration_summary}{A tibble summarizing the performance for each tested combination, including statistical comparisons to the baseline.}
  \item{baseline_auc}{A numeric vector of the AUC scores from the model built on the original, unthinned data.}
  \item{best_points_in_ellipse}{The data.frame of points inside the ellipse from the best performing model.}
  \item{best_points_outside_ellipse}{The data.frame of points outside the ellipse from the best performing model.}
  \item{parameters}{A list containing the parameter ranges used in the calibration (e.g., \code{quantile_range}).}
}
\description{
This function automates the selection of an optimal set of
parameters for the entire \code{bean} workflow. It treats the \code{quantile} for
resolution, the \code{target_percent} for thinning, and the \code{method} for
ellipsoid fitting as model hyperparameters. It iterates through a range of
these values, performs the full \code{prepare -> resolve -> thin -> fit} workflow,
and evaluates the final model's performance using repeated k-fold
cross-validation by calculating the Area Under the Curve (AUC). The function identifies the combination of parameters
that produces the highest mean AUC and provides statistical comparisons against
a baseline model built with unthinned data, using an ANOVA and a Tukey's HSD
post-hoc test.
}
\note{
This is a very computationally intensive function. For reproducible
results, run \code{set.seed()} before calling this function.
}
\examples{
\dontrun{
# This is a long-running example and requires the "dismo" package to be installed.

# Load the package's example data
library(raster)
library(dismo)
occ_file <- system.file("extdata", "Peromyscus_maniculatus_prepared.csv", package = "bean")
occ_data <- read.csv(occ_file)

bio1_file <- system.file("extdata", "BIO1.tif", package = "bean")
bio12_file <- system.file("extdata", "BIO12.tif", package = "bean")
env_rasters <- raster::stack(bio1_file, bio12_file)
# Set seed for reproducibility
set.seed(123)

# Calibrate all key parameters
final_calibration <- calibrate_bean(
  data = occ_data,
  env_vars = c("BIO1", "BIO12"),
  background_data = background_df,
  env_rasters = env_rasters,
  longitude = "x",
  latitude = "y",
  quantile_range = seq(0.1, 0.9, 0.1),
  method_range = c("covmat", "mve"),
  target_percent = 0.95,
  level = 0.95,
  thinning_reps = 3, # Use a small number for the example
  k = 2,
  n_repeats = 2 # Use minimal settings for a runnable example
)

# Print the summary to see the best combination of parameters
print(final_calibration)

# Access the final, best-thinned data directly
final_data <- final_calibration$best_points_in_ellipse
head(final_data)
}
}
\seealso{
\code{\link{prepare_bean}}
}
